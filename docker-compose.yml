version: '3.8'

networks:
  backend:
    driver: bridge

services:
  2fa_middleware:
    build: ./fastapi
    container_name: 2fa_middleware
    networks:
      - backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://fastapi_user:fastapi_pass@postgres:5432/fastapi_db

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak_auth
    command: start-dev --import-realm
    networks:
      - backend
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak-config:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_pass
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: shared_postgres
    networks:
      - backend
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: rootpass
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d

  prometheus:
    image: prom/prometheus
    container_name: prometheus_monitor
    networks:
      - backend
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana_dashboard
    networks:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  pgdata:
  grafana_data: