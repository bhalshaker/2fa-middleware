version: '3.8'

networks:
  backend:
    driver: bridge

services:
  2fa_middleware:
    build: ./app
    container_name: 2fa_middleware
    networks:
      - backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  keycloak:
    image: quay.io/keycloak/keycloak:26.4
    container_name: keycloak_auth
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev --import-realm
    networks:
      - backend
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak-config:/opt/keycloak/data/import
      - keycloak_data:/opt/keycloak/data

  postgres:
    image: postgres:18-alpine
    container_name: user_profile_db
    networks:
      - backend
    environment:
      POSTGRES_USER: pgadmin
      POSTGRES_PASSWORD: pgadmin
      POSTGRES_DB: fastapi_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
  redis:
    image: redis:latest
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus_monitor
    networks:
      - backend
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana_dashboard
    networks:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  pgdata:
  keycloak_data:
  grafana_data:
  redis_data: